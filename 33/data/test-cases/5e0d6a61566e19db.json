{"uid":"5e0d6a61566e19db","name":"test_check_change_size_resizable_windows","fullName":"tests.test_interactions.TestResizable#test_check_change_size_resizable_windows","historyId":"d33b260b68a5c5aba7c388ff80f3ac01","time":{"start":1697657583103,"stop":1697657716869,"duration":133766},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x563d8ad9bfb3 <unknown>\n#1 0x563d8aa6f2f6 <unknown>\n#2 0x563d8aafc4a2 <unknown>\n#3 0x563d8aad8942 <unknown>\n#4 0x563d8aaf1c02 <unknown>\n#5 0x563d8aad8713 <unknown>\n#6 0x563d8aaab18b <unknown>\n#7 0x563d8aaabf7e <unknown>\n#8 0x563d8ad618d8 <unknown>\n#9 0x563d8ad65800 <unknown>\n#10 0x563d8ad6fcfc <unknown>\n#11 0x563d8ad66418 <unknown>\n#12 0x563d8ad3342f <unknown>\n#13 0x563d8ad8a4e8 <unknown>\n#14 0x563d8ad8a6b4 <unknown>\n#15 0x563d8ad9b143 <unknown>\n#16 0x7f33c5c94ac3 <unknown>","statusTrace":"self = <tests.test_interactions.TestInteractionsPage.TestResizable object at 0x7f55a1bec2b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c4faf2ce7b332993c7d61d51cfde289\")>\n\n    @allure.step('Check change size resizable windows')\n    @pytest.mark.xfail\n    def test_check_change_size_resizable_windows(self, driver):\n        resizable_page = ResizablePage(driver, 'https://demoqa.com/resizable')\n        resizable_page.open()\n        resizable_page.remove_footer()\n        resizable_page.remove_fixedban()\n>       max_size = resizable_page.change_resizable_box()\n\ntests/test_interactions.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Interactions/interactions_page.py:110: in change_resizable_box\n    self.action_drag_and_drop_offset(self.element_is_visible(self.locators.RESIZABLE_BOX_HANDLE), 400, 200)\npages/base_page.py:116: in action_drag_and_drop_offset\n    action.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py:103: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f55a09d4670>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x563d8ad8a6b4 \\\\u003Cunknown>\\\\n#15 0x563d8ad9b143 \\\\u003Cunknown>\\\\n#16 0x7f33c5c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x563d8ad9bfb3 <unknown>\nE       #1 0x563d8aa6f2f6 <unknown>\nE       #2 0x563d8aafc4a2 <unknown>\nE       #3 0x563d8aad8942 <unknown>\nE       #4 0x563d8aaf1c02 <unknown>\nE       #5 0x563d8aad8713 <unknown>\nE       #6 0x563d8aaab18b <unknown>\nE       #7 0x563d8aaabf7e <unknown>\nE       #8 0x563d8ad618d8 <unknown>\nE       #9 0x563d8ad65800 <unknown>\nE       #10 0x563d8ad6fcfc <unknown>\nE       #11 0x563d8ad66418 <unknown>\nE       #12 0x563d8ad3342f <unknown>\nE       #13 0x563d8ad8a4e8 <unknown>\nE       #14 0x563d8ad8a6b4 <unknown>\nE       #15 0x563d8ad9b143 <unknown>\nE       #16 0x7f33c5c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697655687370,"stop":1697655687387,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1697657582309,"stop":1697657583103,"duration":794},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x563d8ad9bfb3 <unknown>\n#1 0x563d8aa6f2f6 <unknown>\n#2 0x563d8aafc4a2 <unknown>\n#3 0x563d8aad8942 <unknown>\n#4 0x563d8aaf1c02 <unknown>\n#5 0x563d8aad8713 <unknown>\n#6 0x563d8aaab18b <unknown>\n#7 0x563d8aaabf7e <unknown>\n#8 0x563d8ad618d8 <unknown>\n#9 0x563d8ad65800 <unknown>\n#10 0x563d8ad6fcfc <unknown>\n#11 0x563d8ad66418 <unknown>\n#12 0x563d8ad3342f <unknown>\n#13 0x563d8ad8a4e8 <unknown>\n#14 0x563d8ad8a6b4 <unknown>\n#15 0x563d8ad9b143 <unknown>\n#16 0x7f33c5c94ac3 <unknown>","statusTrace":"self = <tests.test_interactions.TestInteractionsPage.TestResizable object at 0x7f55a1bec2b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c4faf2ce7b332993c7d61d51cfde289\")>\n\n    @allure.step('Check change size resizable windows')\n    @pytest.mark.xfail\n    def test_check_change_size_resizable_windows(self, driver):\n        resizable_page = ResizablePage(driver, 'https://demoqa.com/resizable')\n        resizable_page.open()\n        resizable_page.remove_footer()\n        resizable_page.remove_fixedban()\n>       max_size = resizable_page.change_resizable_box()\n\ntests/test_interactions.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Interactions/interactions_page.py:110: in change_resizable_box\n    self.action_drag_and_drop_offset(self.element_is_visible(self.locators.RESIZABLE_BOX_HANDLE), 400, 200)\npages/base_page.py:116: in action_drag_and_drop_offset\n    action.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py:103: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f55a09d4670>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x563d8ad8a6b4 \\\\u003Cunknown>\\\\n#15 0x563d8ad9b143 \\\\u003Cunknown>\\\\n#16 0x7f33c5c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x563d8ad9bfb3 <unknown>\nE       #1 0x563d8aa6f2f6 <unknown>\nE       #2 0x563d8aafc4a2 <unknown>\nE       #3 0x563d8aad8942 <unknown>\nE       #4 0x563d8aaf1c02 <unknown>\nE       #5 0x563d8aad8713 <unknown>\nE       #6 0x563d8aaab18b <unknown>\nE       #7 0x563d8aaabf7e <unknown>\nE       #8 0x563d8ad618d8 <unknown>\nE       #9 0x563d8ad65800 <unknown>\nE       #10 0x563d8ad6fcfc <unknown>\nE       #11 0x563d8ad66418 <unknown>\nE       #12 0x563d8ad3342f <unknown>\nE       #13 0x563d8ad8a4e8 <unknown>\nE       #14 0x563d8ad8a6b4 <unknown>\nE       #15 0x563d8ad9b143 <unknown>\nE       #16 0x7f33c5c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","steps":[{"name":"Check change size resizable windows","time":{"start":1697657583104,"stop":1697657716868,"duration":133764},"status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x563d8ad9bfb3 <unknown>\n#1 0x563d8aa6f2f6 <unknown>\n#2 0x563d8aafc4a2 <unknown>\n#3 0x563d8aad8942 <unknown>\n#4 0x563d8aaf1c02 <unknown>\n#5 0x563d8aad8713 <unknown>\n#6 0x563d8aaab18b <unknown>\n#7 0x563d8aaabf7e <unknown>\n#8 0x563d8ad618d8 <unknown>\n#9 0x563d8ad65800 <unknown>\n#10 0x563d8ad6fcfc <unknown>\n#11 0x563d8ad66418 <unknown>\n#12 0x563d8ad3342f <unknown>\n#13 0x563d8ad8a4e8 <unknown>\n#14 0x563d8ad8a6b4 <unknown>\n#15 0x563d8ad9b143 <unknown>\n#16 0x7f33c5c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/tests/test_interactions.py\", line 49, in test_check_change_size_resizable_windows\n    max_size = resizable_page.change_resizable_box()\n  File \"/home/runner/work/DemoQA/DemoQA/pages/Interactions/interactions_page.py\", line 110, in change_resizable_box\n    self.action_drag_and_drop_offset(self.element_is_visible(self.locators.RESIZABLE_BOX_HANDLE), 400, 200)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/pages/base_page.py\", line 116, in action_drag_and_drop_offset\n    action.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py\", line 103, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Open page: https://demoqa.com/resizable","time":{"start":1697657583104,"stop":1697657716441,"duration":133337},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Remove footer","time":{"start":1697657716441,"stop":1697657716451,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Remove fixedban","time":{"start":1697657716452,"stop":1697657716462,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check element is present","time":{"start":1697657716462,"stop":1697657716478,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div[id=\"resizableBoxWithRestriction\"]')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check element is visible","time":{"start":1697657716492,"stop":1697657716557,"duration":65},"status":"passed","steps":[{"name":"Check element is present","time":{"start":1697657716492,"stop":1697657716513,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div[id=\"resizableBoxWithRestriction\"] span[class=\"react-resizable-handle react-resizable-handle-se\"]')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div[id=\"resizableBoxWithRestriction\"] span[class=\"react-resizable-handle react-resizable-handle-se\"]')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Action drag and drop offset","time":{"start":1697657716557,"stop":1697657716867,"duration":310},"status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x563d8ad9bfb3 <unknown>\n#1 0x563d8aa6f2f6 <unknown>\n#2 0x563d8aafc4a2 <unknown>\n#3 0x563d8aad8942 <unknown>\n#4 0x563d8aaf1c02 <unknown>\n#5 0x563d8aad8713 <unknown>\n#6 0x563d8aaab18b <unknown>\n#7 0x563d8aaabf7e <unknown>\n#8 0x563d8ad618d8 <unknown>\n#9 0x563d8ad65800 <unknown>\n#10 0x563d8ad6fcfc <unknown>\n#11 0x563d8ad66418 <unknown>\n#12 0x563d8ad3342f <unknown>\n#13 0x563d8ad8a4e8 <unknown>\n#14 0x563d8ad8a6b4 <unknown>\n#15 0x563d8ad9b143 <unknown>\n#16 0x7f33c5c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/pages/base_page.py\", line 116, in action_drag_and_drop_offset\n    action.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py\", line 103, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"3c4faf2ce7b332993c7d61d51cfde289\", element=\"0D52CBB5CC57FA27778151F7C84F5CA4_element_28\")>"},{"name":"x_coord","value":"400"},{"name":"y_coord","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c4faf2ce7b332993c7d61d51cfde289\")>"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1697657716906,"stop":1697657717047,"duration":141},"status":"passed","steps":[],"attachments":[{"uid":"bfd63a1a17aca8ce","name":"Screenshot 2023-10-18 19:35:16.986156","source":"bfd63a1a17aca8ce.png","type":"image/png","size":101724}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"labels":[{"name":"suite","value":"Test Interactions Page"},{"name":"feature","value":"Test Resizable"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestInteractionsPage"},{"name":"host","value":"fv-az485-879"},{"name":"thread","value":"2075-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_interactions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"5e0d6a61566e19db.json","parameterValues":[]}