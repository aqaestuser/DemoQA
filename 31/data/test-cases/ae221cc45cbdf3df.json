{"uid":"ae221cc45cbdf3df","name":"test_menu_tabs_and_subtabs","fullName":"tests.test_widgets.TestMenu#test_menu_tabs_and_subtabs","historyId":"631e6f5b14e8105964da2ca76df965ea","time":{"start":1697641806263,"stop":1697641809528,"duration":3265},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x559e65ed16b3 <unknown>\n#1 0x559e65ba71e7 <unknown>\n#2 0x559e65bac13e <unknown>\n#3 0x559e65bad9c0 <unknown>\n#4 0x559e65bada7c <unknown>\n#5 0x559e65bf3bea <unknown>\n#6 0x559e65bf3240 <unknown>\n#7 0x559e65c33a2c <unknown>\n#8 0x559e65c100c2 <unknown>\n#9 0x559e65c29322 <unknown>\n#10 0x559e65c0fe93 <unknown>\n#11 0x559e65be2934 <unknown>\n#12 0x559e65be371e <unknown>\n#13 0x559e65e96cb8 <unknown>\n#14 0x559e65e9abf0 <unknown>\n#15 0x559e65ea519c <unknown>\n#16 0x559e65e9b808 <unknown>\n#17 0x559e65e6827f <unknown>\n#18 0x559e65ebfe88 <unknown>\n#19 0x559e65ec0059 <unknown>\n#20 0x559e65ed0843 <unknown>\n#21 0x7f07cac94b43 <unknown>","statusTrace":"self = <tests.test_widgets.TestWidgetsPage.TestMenu object at 0x7f11e007a470>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"597d608a692edfecd3972c93fe30342a\")>\n\n    @allure.step('Check menu tabs and subtabs')\n    @pytest.mark.xfail\n    def test_menu_tabs_and_subtabs(self, driver):\n        menu_page = MenuPage(driver, 'https://demoqa.com/menu')\n        menu_page.open()\n>       data = menu_page.check_menu_tabs_and_subtabs()\n\ntests/test_widgets.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Widgets/widgets_page.py:325: in check_menu_tabs_and_subtabs\n    self.action_move_to_element(item)\npages/base_page.py:123: in action_move_to_element\n    action.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py:103: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f11df1760e0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: https://de...\\\\n#19 0x559e65ec0059 \\\\u003Cunknown>\\\\n#20 0x559e65ed0843 \\\\u003Cunknown>\\\\n#21 0x7f07cac94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\nE         (Session info: headless chrome=117.0.5938.132)\nE       Stacktrace:\nE       #0 0x559e65ed16b3 <unknown>\nE       #1 0x559e65ba71e7 <unknown>\nE       #2 0x559e65bac13e <unknown>\nE       #3 0x559e65bad9c0 <unknown>\nE       #4 0x559e65bada7c <unknown>\nE       #5 0x559e65bf3bea <unknown>\nE       #6 0x559e65bf3240 <unknown>\nE       #7 0x559e65c33a2c <unknown>\nE       #8 0x559e65c100c2 <unknown>\nE       #9 0x559e65c29322 <unknown>\nE       #10 0x559e65c0fe93 <unknown>\nE       #11 0x559e65be2934 <unknown>\nE       #12 0x559e65be371e <unknown>\nE       #13 0x559e65e96cb8 <unknown>\nE       #14 0x559e65e9abf0 <unknown>\nE       #15 0x559e65ea519c <unknown>\nE       #16 0x559e65e9b808 <unknown>\nE       #17 0x559e65e6827f <unknown>\nE       #18 0x559e65ebfe88 <unknown>\nE       #19 0x559e65ec0059 <unknown>\nE       #20 0x559e65ed0843 <unknown>\nE       #21 0x7f07cac94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697641255085,"stop":1697641255108,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1697641805398,"stop":1697641806262,"duration":864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x559e65ed16b3 <unknown>\n#1 0x559e65ba71e7 <unknown>\n#2 0x559e65bac13e <unknown>\n#3 0x559e65bad9c0 <unknown>\n#4 0x559e65bada7c <unknown>\n#5 0x559e65bf3bea <unknown>\n#6 0x559e65bf3240 <unknown>\n#7 0x559e65c33a2c <unknown>\n#8 0x559e65c100c2 <unknown>\n#9 0x559e65c29322 <unknown>\n#10 0x559e65c0fe93 <unknown>\n#11 0x559e65be2934 <unknown>\n#12 0x559e65be371e <unknown>\n#13 0x559e65e96cb8 <unknown>\n#14 0x559e65e9abf0 <unknown>\n#15 0x559e65ea519c <unknown>\n#16 0x559e65e9b808 <unknown>\n#17 0x559e65e6827f <unknown>\n#18 0x559e65ebfe88 <unknown>\n#19 0x559e65ec0059 <unknown>\n#20 0x559e65ed0843 <unknown>\n#21 0x7f07cac94b43 <unknown>","statusTrace":"self = <tests.test_widgets.TestWidgetsPage.TestMenu object at 0x7f11e007a470>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"597d608a692edfecd3972c93fe30342a\")>\n\n    @allure.step('Check menu tabs and subtabs')\n    @pytest.mark.xfail\n    def test_menu_tabs_and_subtabs(self, driver):\n        menu_page = MenuPage(driver, 'https://demoqa.com/menu')\n        menu_page.open()\n>       data = menu_page.check_menu_tabs_and_subtabs()\n\ntests/test_widgets.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Widgets/widgets_page.py:325: in check_menu_tabs_and_subtabs\n    self.action_move_to_element(item)\npages/base_page.py:123: in action_move_to_element\n    action.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py:103: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f11df1760e0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: https://de...\\\\n#19 0x559e65ec0059 \\\\u003Cunknown>\\\\n#20 0x559e65ed0843 \\\\u003Cunknown>\\\\n#21 0x7f07cac94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\nE         (Session info: headless chrome=117.0.5938.132)\nE       Stacktrace:\nE       #0 0x559e65ed16b3 <unknown>\nE       #1 0x559e65ba71e7 <unknown>\nE       #2 0x559e65bac13e <unknown>\nE       #3 0x559e65bad9c0 <unknown>\nE       #4 0x559e65bada7c <unknown>\nE       #5 0x559e65bf3bea <unknown>\nE       #6 0x559e65bf3240 <unknown>\nE       #7 0x559e65c33a2c <unknown>\nE       #8 0x559e65c100c2 <unknown>\nE       #9 0x559e65c29322 <unknown>\nE       #10 0x559e65c0fe93 <unknown>\nE       #11 0x559e65be2934 <unknown>\nE       #12 0x559e65be371e <unknown>\nE       #13 0x559e65e96cb8 <unknown>\nE       #14 0x559e65e9abf0 <unknown>\nE       #15 0x559e65ea519c <unknown>\nE       #16 0x559e65e9b808 <unknown>\nE       #17 0x559e65e6827f <unknown>\nE       #18 0x559e65ebfe88 <unknown>\nE       #19 0x559e65ec0059 <unknown>\nE       #20 0x559e65ed0843 <unknown>\nE       #21 0x7f07cac94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Check menu tabs and subtabs","time":{"start":1697641806264,"stop":1697641809528,"duration":3264},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x559e65ed16b3 <unknown>\n#1 0x559e65ba71e7 <unknown>\n#2 0x559e65bac13e <unknown>\n#3 0x559e65bad9c0 <unknown>\n#4 0x559e65bada7c <unknown>\n#5 0x559e65bf3bea <unknown>\n#6 0x559e65bf3240 <unknown>\n#7 0x559e65c33a2c <unknown>\n#8 0x559e65c100c2 <unknown>\n#9 0x559e65c29322 <unknown>\n#10 0x559e65c0fe93 <unknown>\n#11 0x559e65be2934 <unknown>\n#12 0x559e65be371e <unknown>\n#13 0x559e65e96cb8 <unknown>\n#14 0x559e65e9abf0 <unknown>\n#15 0x559e65ea519c <unknown>\n#16 0x559e65e9b808 <unknown>\n#17 0x559e65e6827f <unknown>\n#18 0x559e65ebfe88 <unknown>\n#19 0x559e65ec0059 <unknown>\n#20 0x559e65ed0843 <unknown>\n#21 0x7f07cac94b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/tests/test_widgets.py\", line 173, in test_menu_tabs_and_subtabs\n    data = menu_page.check_menu_tabs_and_subtabs()\n  File \"/home/runner/work/DemoQA/DemoQA/pages/Widgets/widgets_page.py\", line 325, in check_menu_tabs_and_subtabs\n    self.action_move_to_element(item)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/pages/base_page.py\", line 123, in action_move_to_element\n    action.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py\", line 103, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Open page: https://demoqa.com/menu","time":{"start":1697641806265,"stop":1697641808050,"duration":1785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check elements are present","time":{"start":1697641808050,"stop":1697641808081,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', '//*[@id=\"nav\"]//a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Action move to element","time":{"start":1697641808082,"stop":1697641808449,"duration":367},"status":"passed","steps":[{"name":"Move to <selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_34\")>","time":{"start":1697641808082,"stop":1697641808449,"duration":367},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_34\")>"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Action move to element","time":{"start":1697641808469,"stop":1697641808781,"duration":312},"status":"passed","steps":[{"name":"Move to <selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_35\")>","time":{"start":1697641808469,"stop":1697641808781,"duration":312},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_35\")>"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Action move to element","time":{"start":1697641808846,"stop":1697641809246,"duration":400},"status":"passed","steps":[{"name":"Move to <selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_36\")>","time":{"start":1697641808846,"stop":1697641809246,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_36\")>"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Action move to element","time":{"start":1697641809504,"stop":1697641809528,"duration":24},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x559e65ed16b3 <unknown>\n#1 0x559e65ba71e7 <unknown>\n#2 0x559e65bac13e <unknown>\n#3 0x559e65bad9c0 <unknown>\n#4 0x559e65bada7c <unknown>\n#5 0x559e65bf3bea <unknown>\n#6 0x559e65bf3240 <unknown>\n#7 0x559e65c33a2c <unknown>\n#8 0x559e65c100c2 <unknown>\n#9 0x559e65c29322 <unknown>\n#10 0x559e65c0fe93 <unknown>\n#11 0x559e65be2934 <unknown>\n#12 0x559e65be371e <unknown>\n#13 0x559e65e96cb8 <unknown>\n#14 0x559e65e9abf0 <unknown>\n#15 0x559e65ea519c <unknown>\n#16 0x559e65e9b808 <unknown>\n#17 0x559e65e6827f <unknown>\n#18 0x559e65ebfe88 <unknown>\n#19 0x559e65ec0059 <unknown>\n#20 0x559e65ed0843 <unknown>\n#21 0x7f07cac94b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/DemoQA/DemoQA/pages/base_page.py\", line 123, in action_move_to_element\n    action.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py\", line 103, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Move to <selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_37\")>","time":{"start":1697641809504,"stop":1697641809527,"duration":23},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: https://demoqa.com/menu# has no size and location\n  (Session info: headless chrome=117.0.5938.132)\nStacktrace:\n#0 0x559e65ed16b3 <unknown>\n#1 0x559e65ba71e7 <unknown>\n#2 0x559e65bac13e <unknown>\n#3 0x559e65bad9c0 <unknown>\n#4 0x559e65bada7c <unknown>\n#5 0x559e65bf3bea <unknown>\n#6 0x559e65bf3240 <unknown>\n#7 0x559e65c33a2c <unknown>\n#8 0x559e65c100c2 <unknown>\n#9 0x559e65c29322 <unknown>\n#10 0x559e65c0fe93 <unknown>\n#11 0x559e65be2934 <unknown>\n#12 0x559e65be371e <unknown>\n#13 0x559e65e96cb8 <unknown>\n#14 0x559e65e9abf0 <unknown>\n#15 0x559e65ea519c <unknown>\n#16 0x559e65e9b808 <unknown>\n#17 0x559e65e6827f <unknown>\n#18 0x559e65ebfe88 <unknown>\n#19 0x559e65ec0059 <unknown>\n#20 0x559e65ed0843 <unknown>\n#21 0x7f07cac94b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/DemoQA/DemoQA/pages/base_page.py\", line 123, in action_move_to_element\n    action.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/action_chains.py\", line 103, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"597d608a692edfecd3972c93fe30342a\", element=\"A8014EAB821DB490967465126B84BF32_element_37\")>"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"597d608a692edfecd3972c93fe30342a\")>"}],"shouldDisplayMessage":false,"stepsCount":10,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"477cc9b24dadbdf","name":"log","source":"477cc9b24dadbdf.txt","type":"text/plain","size":361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1697641809637,"stop":1697641809888,"duration":251},"status":"passed","steps":[],"attachments":[{"uid":"e17b438d80941280","name":"Screenshot 2023-10-18 15:10:09.825685","source":"e17b438d80941280.png","type":"image/png","size":245993}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"labels":[{"name":"feature","value":"Test Menu"},{"name":"suite","value":"Test Widgets Page"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestWidgetsPage"},{"name":"host","value":"fv-az626-327"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_widgets"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"ae221cc45cbdf3df.json","parameterValues":[]}